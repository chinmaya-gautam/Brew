

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.*;

import javax.imageio.ImageIO;
import javax.sql.rowset.JdbcRowSet;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

public class brew_main extends JFrame implements Runnable{

	BufferedImage image;
	private JLabel logo;
	private JPanel logo_panel;
	private JPanel filters_panel;
	private JPanel right_panel;
	private JPanel center_panel;
	private JPanel bottom_panel;
	private JPanel rating_panel;
	private JPanel genre_panel;
	private JPanel go_panel;
	private JLabel rating_label;
	private TextField rating_lower_bound_text;
	private TextField rating_upper_bound_text;
	private TextField actor_text;
	private TextField director_text;
	private TextField year_lower_bound_text;
	private TextField year_upper_bound_text;
	private JLabel to_label;
	private JComboBox genre_combobox;
	private JButton go_button;
	private static Db_utilities dbu;
	
	public brew_main(){
		try {
			image = ImageIO.read(new File("../images/brew_logo.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		//TODO move all setups to their own methods
		//logo setup
		logo_panel = new JPanel(new BorderLayout());
		logo = new JLabel(new ImageIcon(image));
		logo_panel.add(logo,BorderLayout.EAST);
		logo_panel.setBackground(Color.BLACK);
		add(logo_panel, BorderLayout.NORTH);
		
		//filters setup
		filters_panel = new JPanel(new GridLayout(3,1));
		filters_panel.setBackground(Color.BLACK);
		
		to_label = new JLabel("to");
		to_label.setForeground(Color.WHITE);
		
		rating_lower_bound_text = new TextField();
		rating_lower_bound_text.setColumns(5);
		rating_upper_bound_text = new TextField();
		rating_upper_bound_text.setColumns(5);
		rating_label = new JLabel("Rating");
		rating_label.setText("Rating in range: ");
		rating_label.setForeground(Color.WHITE);
		rating_panel = new JPanel();
		rating_panel.setBackground(Color.BLACK);
		rating_panel.add(rating_label);
		rating_panel.add(rating_lower_bound_text);
		rating_panel.add(to_label);
		rating_panel.add(rating_upper_bound_text);
		
		genre_panel = new JPanel();
		genre_panel.setBackground(Color.BLACK);
		genre_combobox = new JComboBox();
		genre_combobox.addItem("select genre");
		genre_combobox.addItem("Action");
		genre_combobox.addItem("Crime");
		genre_combobox.addItem("Drama");
		genre_combobox.addItem("Biography");
		genre_combobox.addItem("History");
		genre_combobox.addItem("Western");
		genre_combobox.addItem("Adventure");
		genre_combobox.addItem("Fantasy");
		genre_combobox.addItem("Romance");
		genre_combobox.addItem("Mystery");
		genre_combobox.addItem("Sci-Fi");
		genre_combobox.addItem("Thriller");
		genre_combobox.addItem("Family");
		genre_combobox.addItem("Comedy");
		genre_combobox.addItem("Animation");
																																					genre_combobox.addItem("Sport");
		genre_panel.add(genre_combobox);
		
		actor_text = new TextField();
		actor_text.setColumns(5);
		actor_text.setText("actor");
		go_panel = new JPanel();
		go_panel.setBackground(Color.BLACK);
		go_button = new JButton();
		go_button.setText("GO");
		go_button.addActionListener(go_action);
		
		go_panel.add(go_button);
		filters_panel.add(rating_panel);
		filters_panel.add(genre_panel);
		filters_panel.add(actor_text);
		filters_panel.add(go_panel);
		
		filters_panel.setBorder(new EmptyBorder(20, 20, 10, 10));
		add(filters_panel, BorderLayout.LINE_START);
		
		right_panel = new JPanel(new BorderLayout());
		center_panel = new JPanel();
		
		// start
		JScrollPane scroll = new JScrollPane(center_panel);
		scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
		scroll.setBorder(null);
		//end
		right_panel.setBackground(Color.BLACK);
		center_panel.setBackground(Color.BLACK);
		center_panel.setLayout(new GridLayout());
		add(scroll, BorderLayout.CENTER);
		//add(center_panel, BorderLayout.CENTER);
		add(right_panel, BorderLayout.EAST);
		
	}
	
	ActionListener go_action = new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			String lower_rating_text =  rating_lower_bound_text.getText();
			String upper_rating_text =  rating_upper_bound_text.getText();
			String genre_text = genre_combobox.getSelectedItem().toString();
			
			if (lower_rating_text.isEmpty()){ lower_rating_text = "0.0";}
			if (upper_rating_text.isEmpty()){ upper_rating_text = "10.0";}
			if (genre_text.equals("select genre")){genre_text = "";}
			
			System.out.println("lower rating: " + lower_rating_text);
			System.out.println("upper rating: " + upper_rating_text);
			System.out.println("genre: " + genre_text);
			
			float lower_rating = Float.parseFloat(lower_rating_text);
			float upper_rating = Float.parseFloat(upper_rating_text);
			Constraints constraints = new Constraints(lower_rating, upper_rating, genre_text,"", "");
			ArrayList<Movies> movies = get_results(constraints);
			show_movies(movies);
		}
	};
	
	private void show_movies(ArrayList<Movies> movies){
		center_panel.removeAll();
		System.out.println("time to display movies!!");
		int num_movies = movies.size();

		int rows = 0;
		int cols = 3;
		
		if (num_movies %3 != 0){
			rows = num_movies/3 + 1;
		}else{
			rows = num_movies/3;
		}
		System.out.println("num movies: " + num_movies);
		System.out.println("Rows: " + rows + ", Cols: " + cols);
		center_panel.setLayout(new GridLayout(rows, cols));
		int counter = -1;
		for (Movies movie: movies){
			//System.out.println(movie.movieName);
			JButton imgButton = new JButton();
			JPanel imgContainerPanel = new JPanel();
			imgButton.setBorder(new EmptyBorder(50, 50, 50, 50));
			imgButton.setPreferredSize(new Dimension(300, 400));
			counter += 1;
			imgButton.setIcon(new ImageIcon(movie.poster));
			imgButton.setText(movie.movieName);
			imgButton.setVerticalTextPosition(JButton.BOTTOM);
			imgButton.setHorizontalTextPosition(JButton.CENTER);
			imgButton.setForeground(Color.WHITE);
			String toolTipText = "<html>" +  movie.movieName +"<BR> "
					+ "Rating: "+movie.rating + "</html>";
			imgButton.setToolTipText(toolTipText);
			imgContainerPanel.add(imgButton);
			imgContainerPanel.setBackground(Color.BLACK);
			center_panel.add(imgContainerPanel);
			center_panel.revalidate();
			validate();
		}
	}
	
	private ArrayList<Movies> get_results(Constraints constraints){
		ArrayList<Movies> movies = dbu.getResult(constraints);
		return movies;
	}
	public static void main(String[] args){
		dbu = new Db_utilities();
		dbu.test_db();
		brew_main app = new brew_main();
		app.setSize(1960,1024);
		app.setDefaultCloseOperation(EXIT_ON_CLOSE);
		app.setVisible(true);
		app.getContentPane().setBackground(Color.BLACK);
		app.run();
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
